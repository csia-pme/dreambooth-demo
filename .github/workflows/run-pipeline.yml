name: run-pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  launch-runner:
    runs-on: 
      group: default
      labels: [self-hosted]
    container:
      image: ubuntu:latest
    steps:
      - uses: iterative/setup-cml@v1
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - uses: actions/checkout@v3
      - name: Deploy runner on self-hosted k8s
        env:
          REPO_TOKEN: ${{ secrets.CML_PAT_TOKEN }}
          KUBERNETES_CONFIGURATION: $ {{ secrets.KUBERNETES_CONFIGURATION }}}
        run: |
          cml runner launch \
              --cloud=kubernetes \
              --labels=cml-gpu
  train-job:
    runs-on:
      labels: [self-hosted, cml-gpu]
    container:
      image: nvidia/cuda:12.0.1-runtime-ubuntu22.04
    needs: launch-runner
    env:
      PIP_CACHE_DIR: ${{ github.workspace }}/.cache/pip
    steps:
      - name: GPU Info
        run: nvidia-smi
        # Update git as actions/checkout@v2 does not copy .git folder which is needed by dvc
      - name: Update Git
        run: |
          apt-get update
          apt-get install -y git
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: sh ./scripts/installation.sh
      - name: Set up DVC credentials
        run: |
          dvc remote modify myremote access_key_id ${{ secrets.MINIO_KEY_ID }}
          dvc remote modify myremote secret_access_key ${{ secrets.MINIO_ACCESS_KEY }}
      - name: Pull data from S3
        run:  | 
          ls -la
          dvc pull
      - name: Run experiment
        run: dvc repro
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: image-grid-artifact
          path: ./images
        env:
          retention-days: 7

  report:
    runs-on:
      labels: [self-hosted, cml-gpu]
    container:
      image: iterativeai/cml:0-dvc2-base1
    needs: train-job
    env:
      REPO_TOKEN: ${{ secrets.CML_PAT_TOKEN }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: image-grid-artifact
          path: ./images
      - name: Run report
        run: |
          ls -la
          sh ./scripts/report.sh